# This file contains pin mappings for the stock 2020 Creality Ender 3
# Pro with the 32-bit Creality 4.2.2 board. To use this config, during
# "make menuconfig" select the STM32F103 with a "28KiB bootloader" and
# serial (on USART1 PA10/PA9) communication.

# It should be noted that newer variations of this printer shipping in
# 2022 may have GD32F103 chips installed and not STM32F103. You may
# have to inspect the mainboard to ascertain which one you have. If it
# is the GD32F103 then please select Disable SWD at startup in the
# "make menuconfig" along with the same settings for STM32F103.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[include adxl.cfg] # Comment this out when disconnecting the RPi Pico and ADXL345

[include KAMP_Settings.cfg] # include KAMP config

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 248
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]
endstop_pin: probe:z_virtual_endstop
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
# endstop_pin: ^PA7
# position_endstop: 0.0
position_max: 250
position_min: -2

[safe_z_home]
home_xy_position: 148.000, 118.000
speed:120
z_hop: 10
z_hop_speed: 10

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 31.767
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 275
pressure_advance: 0.15
max_extrude_cross_section: 5
#################   NOTE: This value is set automatically based on the "nozzle diameter" parameter and does not need to be changed by the user unless technical tuning is needed
#   Maximum area (in mm^2) of an extrusion cross section (eg,
#   extrusion width multiplied by layer height). This setting prevents
#   excessive amounts of extrusion during relatively small XY moves.
#   If a move requests an extrusion rate that would exceed this value
#   it will cause an error to be returned. The default is: 4.0 *
#   nozzle_diameter^2

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 115

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
max_z_velocity: 5
max_z_accel: 100

# Pin mappings for BL_T port
[bltouch]
sensor_pin: ^PB1
control_pin: PB0
pin_move_time: 0.675
stow_on_each_sample: True
probe_with_touch_mode: True
pin_up_touch_mode_reports_triggered: False
x_offset: -45
y_offset: -6
#z_offset: 0

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[include mainsail.cfg]

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 5, 10
mesh_max: 200, 225
probe_count: 5, 5

[gcode_macro RESTART_PI]
gcode:
  SYSTEM reboot

[menu __main __setup __restart __Reboot_Pi]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Reboot Pi
gcode:
  {action_call_remote_method("reboot_machine")}

[filament_switch_sensor Filament_Sensor]
pause_on_runout: True
switch_pin: PA4

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

######################################################################
## Filament Change                                                  ##
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 130mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "SWAP_RESUME" gcode.
[gcode_macro M600]
########### Gcode ############
gcode:
  {% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
  {% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-20)|int %}
  {% set tool = params.tool|default(0)|int %}

        SAVE_GCODE_STATE NAME=M600_state
        PAUSE
        G91
        G1 E-5 F4000
        G1 Z{Z}
        G90
        G1 X{X} Y{Y} F3000        ;park position
        G0 E10 F500                ;extrude filament to get better blob on end
        G0 E{E} F600             ;retract additional filament to move out of melt zone
        G92 E0

#    Use this command resume during a mid print filament swap (DONT USE OCTO/MAINSAIL/DWC RESUME)
[gcode_macro SWAP_RESUME] 
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    resume

[save_variables]
filename: ~/printer_data/config/variables.cfg

[gcode_macro NOZZLE_CHANGE]
gcode:
  {% set NOZZLE_DIAMETER = params.NOZZLE_DIAMETER|default(printer.save_variables.variables.nozzle_diameter)|float %}
  _CG28
  G1 X110 Y200 F3000
  SAVE_VARIABLE VARIABLE=nozzle_diameter VALUE='{NOZZLE_DIAMETER}'
  M109 S220

[exclude_object]

# https://tsukiyo.io/posts/calibrate-ender3v2-with-klipper/
[screws_tilt_adjust]
screw1: 76, 32
screw1_name: Front left
screw2: 246, 32
screw2_name: Front right
screw3: 246, 202
screw3_name: Back right
screw4: 76, 202
screw4_name: Back left
screw_thread: CW-M4
horizontal_move_z: 10

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[input_shaper]
damping_ratio_x: 0.061
damping_ratio_y: 0.1

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.020000, -0.047500, -0.080000
#*# 	  0.017500, -0.037500, -0.095000
#*# 	  0.022500, -0.052500, -0.067500
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 97.595
#*# max_x = 122.395
#*# min_y = 102.2
#*# max_y = 117.78000000000002
#*#
#*# [bltouch]
#*# z_offset = 0.475
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 39.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 36.6
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.658
#*# pid_ki = 1.621
#*# pid_kd = 836.942
